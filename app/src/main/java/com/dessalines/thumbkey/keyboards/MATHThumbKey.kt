package com.dessalines.thumbkey.keyboards

import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.outlined.ArrowDropDown
import androidx.compose.material.icons.outlined.ArrowDropUp
import com.dessalines.thumbkey.utils.ColorVariant
import com.dessalines.thumbkey.utils.FontSizeVariant
import com.dessalines.thumbkey.utils.KeyAction
import com.dessalines.thumbkey.utils.KeyC
import com.dessalines.thumbkey.utils.KeyDisplay
import com.dessalines.thumbkey.utils.KeyItemC
import com.dessalines.thumbkey.utils.KeyboardC
import com.dessalines.thumbkey.utils.KeyboardDefinition
import com.dessalines.thumbkey.utils.KeyboardDefinitionModes
import com.dessalines.thumbkey.utils.SwipeNWay

val KB_MATH_THUMBKEY_MAIN =
    KeyboardC(
        listOf(
            listOf(
                KeyItemC(
                    center = KeyC("‚àÄ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topLeft = KeyC("‚ää"),
                    left = KeyC("‚äÜ"),
                    bottomLeft = KeyC("‚äÇ"),
                ),
                KeyItemC(
                    center = KeyC("‚à´", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    left = KeyC("+"),
                    topLeft = KeyC("¬±"),
                    right = KeyC("!"),
                    bottomLeft = KeyC("‚àã"),
                    bottomRight = KeyC("‚àà"),
                    bottom = KeyC("‚àÇ"),
                ),
                KeyItemC(
                    center = KeyC("‚àÉ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topRight = KeyC("‚äã"),
                    right = KeyC("‚äá"),
                    bottomRight = KeyC("‚äÉ"),
                    bottom = KeyC("="),
                    bottomLeft = KeyC("‚à£"),
                    left = KeyC("‚â°"),
                ),
                EMOJI_KEY_ITEM,
            ),
            listOf(
                KeyItemC(
                    center = KeyC("‚àÖ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topRight = KeyC("‚à©"),
                    right = KeyC("‚à™"),
                    bottomRight = KeyC("‚äç"),
                    topLeft = KeyC("{"),
                    left = KeyC("("),
                    bottom = KeyC("ùí´"),
                ),
                KeyItemC(
                    center = KeyC("‚àé", size = FontSizeVariant.LARGE),
                    bottomRight = KeyC("‚áí"),
                    bottom = KeyC("‚áî"),
                    bottomLeft = KeyC("‚áê"),
                ),
                KeyItemC(
                    center = KeyC("¬¨", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topLeft = KeyC("‚àß"),
                    left = KeyC("‚à®"),
                    bottomLeft = KeyC("‚©í"),
                    top =
                        KeyC(
                            display = KeyDisplay.IconDisplay(Icons.Outlined.ArrowDropUp),
                            action = KeyAction.ToggleShiftMode(true),
                            swipeReturnAction = KeyAction.ToggleCurrentWordCapitalization(true),
                            color = ColorVariant.MUTED,
                        ),
                    topRight = KeyC("}"),
                    right = KeyC(")"),
                    bottom =
                        KeyC(
                            KeyAction.ToggleShiftMode(false),
                            swipeReturnAction = KeyAction.ToggleCurrentWordCapitalization(false),
                        ),
                ),
                NUMERIC_KEY_ITEM,
            ),
            listOf(
                KeyItemC(
                    center = KeyC("‚Üí", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topLeft = KeyC("~"),
                    left = KeyC("‚â§"),
                    bottomLeft = KeyC("<"),
                    bottom = KeyC("√∑"),
                    bottomRight = KeyC(":"),
                    right = KeyC("‚Ü¶"),
                    top = KeyC("‚àò"),
                    topRight = KeyC("‚ãÖ"),
                ),
                KeyItemC(
                    center = KeyC("‚àë", size = FontSizeVariant.LARGE),
                    top = KeyC("‚®Ø"),
                    topRight = KeyC("'", color = ColorVariant.MUTED),
                    left = KeyC(","),
                    bottomRight = KeyC("-", color = ColorVariant.MUTED),
                    bottom = KeyC(".", color = ColorVariant.MUTED),
                    bottomLeft = KeyC("*", color = ColorVariant.MUTED),
                    right = KeyC("‚àè", color = ColorVariant.MUTED),
                    topLeft = KeyC("‚àû", color = ColorVariant.MUTED),
                ),
                KeyItemC(
                    center = KeyC("‚Ñï", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topRight = KeyC("¬∞"),
                    right = KeyC("‚â•"),
                    bottomRight = KeyC(">"),
                    top = KeyC("‚ÑÇ"),
                    topLeft = KeyC("‚Ñù"),
                    left = KeyC("‚Ñö"),
                    bottomLeft = KeyC("‚Ñô"),
                    bottom = KeyC("‚Ñ§"),
                ),
                BACKSPACE_KEY_ITEM,
            ),
            listOf(
                SPACEBAR_KEY_ITEM,
                RETURN_KEY_ITEM,
            ),
        ),
    )

val KB_MATH_THUMBKEY_SLASH =
    KeyboardC(
        listOf(
            listOf(
                KeyItemC(
                    center = KeyC("", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    left = KeyC("‚äà"),
                    bottomLeft = KeyC("‚äÑ"),
                ),
                KeyItemC(
                    center = KeyC("‚àÆ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topLeft = KeyC("‚àì"),
                    bottomLeft = KeyC("‚àå"),
                    bottomRight = KeyC("‚àâ"),
                ),
                KeyItemC(
                    center = KeyC("‚àÑ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    right = KeyC("‚äâ"),
                    bottomRight = KeyC("‚äÖ"),
                    bottom = KeyC("‚â†"),
                    bottomLeft = KeyC("‚à§"),
                ),
                EMOJI_KEY_ITEM,
            ),
            listOf(
                KeyItemC(
                    center = KeyC("‚àÖ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                ),
                KeyItemC(
                    center = KeyC("‚ÜØ", size = FontSizeVariant.LARGE),
                    bottomRight = KeyC("‚áè"),
                    bottom = KeyC("‚áé"),
                    bottomLeft = KeyC("‚áç"),
                ),
                KeyItemC(
                    center = KeyC("¬¨", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    bottom =
                        KeyC(
                            display = KeyDisplay.IconDisplay(Icons.Outlined.ArrowDropDown),
                            action = KeyAction.ToggleShiftMode(false),
                            swipeReturnAction = KeyAction.ToggleCurrentWordCapitalization(false),
                            color = ColorVariant.MUTED,
                        ),
                ),
                NUMERIC_KEY_ITEM,
            ),
            listOf(
                KeyItemC(
                    center = KeyC("‚Üõ", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    topLeft = KeyC("‚âÅ"),
                    left = KeyC("‚â∞"),
                    bottomLeft = KeyC("‚âÆ"),
                ),
                KeyItemC(
                    center = KeyC("", size = FontSizeVariant.LARGE),
                ),
                KeyItemC(
                    center = KeyC("", size = FontSizeVariant.LARGE),
                    swipeType = SwipeNWay.EIGHT_WAY,
                    left = KeyC("‚â±"),
                    bottomLeft = KeyC("‚âØ"),
                ),
                BACKSPACE_KEY_ITEM,
            ),
            listOf(
                SPACEBAR_KEY_ITEM,
                RETURN_KEY_ITEM,
            ),
        ),
    )

val KB_MATH_THUMBKEY: KeyboardDefinition =
    KeyboardDefinition(
        title = "math thumb-key",
        modes =
            KeyboardDefinitionModes(
                main = KB_MATH_THUMBKEY_MAIN,
                shifted = KB_MATH_THUMBKEY_SLASH,
                numeric = NUMERIC_KEYBOARD,
            ),
    )
